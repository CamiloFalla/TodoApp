{"ast":null,"code":"var _s = $RefreshSig$();\n// useDarkMode.js\nimport { useState, useEffect } from 'react';\nfunction useDarkMode() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const storedMode = localStorage.getItem('darkMode');\n    return storedMode ? JSON.parse(storedMode) : false;\n  });\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n  const toggleDarkMode = () => setIsDarkMode(prevMode => !prevMode);\n  return {\n    isDarkMode,\n    toggleDarkMode\n  };\n}\n_s(useDarkMode, \"r9uBMQEuLwWxDsNhzwcWxRGLS/c=\");\nexport { useDarkMode };","map":{"version":3,"names":["useState","useEffect","useDarkMode","_s","isDarkMode","setIsDarkMode","storedMode","localStorage","getItem","JSON","parse","setItem","stringify","toggleDarkMode","prevMode"],"sources":["/home/camilotic/Documents/frontend/TodoApp/src/components/Todomain/componentsTodo/useDarkMode.js"],"sourcesContent":["// useDarkMode.js\nimport { useState, useEffect } from 'react';\n\nfunction useDarkMode() {\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const storedMode = localStorage.getItem('darkMode');\n    return storedMode ? JSON.parse(storedMode) : false;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n\n  const toggleDarkMode = () => setIsDarkMode((prevMode) => !prevMode);\n\n  return { isDarkMode, toggleDarkMode };\n}\n\nexport { useDarkMode };"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,MAAM;IACjD,MAAMM,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,KAAK;EACpD,CAAC,CAAC;EAEFL,SAAS,CAAC,MAAM;IACdM,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACR,UAAU,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMS,cAAc,GAAGA,CAAA,KAAMR,aAAa,CAAES,QAAQ,IAAK,CAACA,QAAQ,CAAC;EAEnE,OAAO;IAAEV,UAAU;IAAES;EAAe,CAAC;AACvC;AAACV,EAAA,CAbQD,WAAW;AAepB,SAASA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}