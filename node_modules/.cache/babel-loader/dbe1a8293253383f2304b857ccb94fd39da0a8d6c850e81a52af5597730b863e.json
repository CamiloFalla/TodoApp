{"ast":null,"code":"var _jsxFileName = \"/home/camilotic/Documents/frontend/TodoApp/src/components/Todomain/Todomain.js\",\n  _s = $RefreshSig$();\n// En Todomain.js\n\nimport React, { useState, useEffect } from 'react';\nimport './Todomain.css';\nimport { TodoFilter } from './componentsTodo/TodoFilter';\nimport { TodoItem } from './componentsTodo/TodoItem';\nimport { TodoCounter } from './componentsTodo/TodoCounter';\nimport { useTasks } from './componentsTodo/useTask'; // Asegúrate que el nombre del archivo importado es correcto\nimport { useDarkMode } from './componentsTodo/useDarkMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todomain() {\n  _s();\n  const {\n    tasks,\n    addTask,\n    removeTask,\n    toggleCompleted\n  } = useTasks();\n  const {\n    isDarkMode,\n    toggleDarkMode\n  } = useDarkMode();\n  const [currentSearchText, setCurrentSearchText] = useState('');\n  const [filteredTasks, setFilteredTasks] = useState(tasks);\n  useEffect(() => {\n    if (currentSearchText.trim()) {\n      const searchResults = tasks.filter(task => task.text.toLowerCase().includes(currentSearchText.toLowerCase()));\n      setFilteredTasks(searchResults);\n    } else {\n      setFilteredTasks(tasks); // Restablece a todas las tareas cuando no hay texto\n    }\n  }, [currentSearchText, tasks]);\n  const totalTasks = tasks.length;\n  const completedTasks = tasks.filter(task => task.completed).length;\n  const handleAddTask = text => {\n    addTask(text);\n    setCurrentSearchText(''); // Limpia el texto de búsqueda cada vez que se añade una nueva tarea\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dark-mode-button\",\n      onClick: toggleDarkMode,\n      children: [\"Modo \", isDarkMode ? 'Claro' : 'Oscuro']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoCounter, {\n      total: totalTasks,\n      completed: completedTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoFilter, {\n      addTask: addTask,\n      searchTasks: setCurrentSearchText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n        id: task.id,\n        text: task.text,\n        completed: task.completed,\n        onToggleCompleted: toggleCompleted,\n        onRemoveTask: removeTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Todomain, \"5wjc3DvLtqBToz9zu5NYUtXsU9k=\", false, function () {\n  return [useTasks, useDarkMode];\n});\n_c = Todomain;\nexport default Todomain;\nvar _c;\n$RefreshReg$(_c, \"Todomain\");","map":{"version":3,"names":["React","useState","useEffect","TodoFilter","TodoItem","TodoCounter","useTasks","useDarkMode","jsxDEV","_jsxDEV","Todomain","_s","tasks","addTask","removeTask","toggleCompleted","isDarkMode","toggleDarkMode","currentSearchText","setCurrentSearchText","filteredTasks","setFilteredTasks","trim","searchResults","filter","task","text","toLowerCase","includes","totalTasks","length","completedTasks","completed","handleAddTask","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","total","searchTasks","map","id","onToggleCompleted","onRemoveTask","_c","$RefreshReg$"],"sources":["/home/camilotic/Documents/frontend/TodoApp/src/components/Todomain/Todomain.js"],"sourcesContent":["// En Todomain.js\n\nimport React, { useState, useEffect } from 'react';\nimport './Todomain.css';\nimport { TodoFilter } from './componentsTodo/TodoFilter';\nimport { TodoItem } from './componentsTodo/TodoItem';\nimport { TodoCounter } from './componentsTodo/TodoCounter';\nimport { useTasks } from './componentsTodo/useTask';  // Asegúrate que el nombre del archivo importado es correcto\nimport { useDarkMode } from './componentsTodo/useDarkMode';\n\nfunction Todomain() {\n  const { tasks, addTask, removeTask, toggleCompleted } = useTasks();\n  const { isDarkMode, toggleDarkMode } = useDarkMode();\n\n  const [currentSearchText, setCurrentSearchText] = useState('');\n  const [filteredTasks, setFilteredTasks] = useState(tasks);\n\n  useEffect(() => {\n    if (currentSearchText.trim()) {\n      const searchResults = tasks.filter(task =>\n        task.text.toLowerCase().includes(currentSearchText.toLowerCase())\n      );\n      setFilteredTasks(searchResults);\n    } else {\n      setFilteredTasks(tasks); // Restablece a todas las tareas cuando no hay texto\n    }\n  }, [currentSearchText, tasks]);\n\n  const totalTasks = tasks.length;\n  const completedTasks = tasks.filter(task => task.completed).length;\n\n  const handleAddTask = (text) => {\n    addTask(text);\n    setCurrentSearchText('');  // Limpia el texto de búsqueda cada vez que se añade una nueva tarea\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      <button className=\"dark-mode-button\" onClick={toggleDarkMode}>\n        Modo {isDarkMode ? 'Claro' : 'Oscuro'}\n      </button>\n      <TodoCounter total={totalTasks} completed={completedTasks} />\n      <TodoFilter addTask={addTask} searchTasks={setCurrentSearchText} />\n      <ul>\n        {filteredTasks.map((task) => (\n          <TodoItem\n            key={task.id}\n            id={task.id}\n            text={task.text}\n            completed={task.completed}\n            onToggleCompleted={toggleCompleted}\n            onRemoveTask={removeTask}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Todomain;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}